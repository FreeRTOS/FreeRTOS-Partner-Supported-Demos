
export TI_PORT_DEMO_ROOT?=$(abspath ../)
include $(TI_PORT_DEMO_ROOT)/imports.mak

CG_TOOL_ROOT=$(CGT_GCC_AARCH64_PATH)

CC=$(CGT_GCC_AARCH64_PATH)/bin/aarch64-none-elf-gcc
AR=$(CGT_GCC_AARCH64_PATH)/bin/aarch64-none-elf-gcc-ar

LIBNAME:=drivers.am64x.a53.gcc-aarch64.lib

FILES_common := \
    csl_sec_proxy.c \
    pinmux.c \
    sciclient.c \
    sciclient_pm.c \
    sciclient_rm.c \
    sciclient_rm_irq.c \
    sciclient_procboot.c \
    sciclient_firewall.c \
    sciclient_irq_rm.c \
    sciclient_fmwSecureProxyMap.c \
    sciclient_boardcfg.c \
    sciclient_soc_priv.c \
    soc.c \
    uart_v0.c \
    uart_dma.c \
    uart_dma_udma.c \

FILES_PATH_common = \
    pinmux/am64x \
    sciclient \
    sciclient/soc/am64x \
    soc/am64x \
    uart/v0 \
    uart/v0/dma \
    uart/v0/dma/udma \

INCLUDES_common := \
    -I${PORT_SRC} \

DEFINES_common := \
    -DSOC_AM64X \

CFLAGS_common := \
    -mcpu=cortex-a53+fp+simd \
    -mabi=lp64 \
    -mcmodel=large \
    -mstrict-align \
    -mfix-cortex-a53-835769 \
    -mfix-cortex-a53-843419 \
    -Wall \
    -Werror \
    -g \
    -Wno-int-to-pointer-cast \
    -Wno-pointer-to-int-cast \
    -Wno-unused-but-set-variable \
    -fdata-sections \
    -ffunction-sections \

CFLAGS_debug := \
    -D_DEBUG_=1 \

ARFLAGS_common := \
    cr \

FILES := $(FILES_common)
ASMFILES := $(ASMFILES_common)
FILES_PATH := $(FILES_PATH_common)
CFLAGS := $(CFLAGS_common)
ASMFLAGS := $(CFLAGS_common)
ifeq ($(CPLUSPLUS_BUILD), yes)
CFLAGS += $(CFLAGS_cpp_common)
endif
DEFINES := $(DEFINES_common)
INCLUDES := $(INCLUDES_common)
ARFLAGS := $(ARFLAGS_common)

LIBDIR := lib
OBJDIR := obj/am64x/gcc-aarch64/a53/drivers/
OBJS := $(FILES:%.c=%.obj)
OBJS += $(ASMFILES:%.S=%.obj)
DEPS := $(FILES:%.c=%.d)

vpath %.obj $(OBJDIR)
vpath %.c $(FILES_PATH)
vpath %.S $(FILES_PATH)

$(OBJDIR)/%.obj %.obj: %.c
	@echo  Compiling: $(LIBNAME): $<
	$(CC) -c $(CFLAGS) $(INCLUDES) $(DEFINES) -MMD -MT $@ -o $(OBJDIR)/$@ $<

$(OBJDIR)/%.obj %.obj: %.S
	@echo  Compiling: $(LIBNAME): $<
	$(CC) -c -x assembler-with-cpp $(CFLAGS) $(INCLUDES) $(DEFINES) -o $(OBJDIR)$@ $<

all: $(LIBDIR)/$(LIBNAME)

$(LIBDIR)/$(LIBNAME): $(OBJS) | $(LIBDIR)
	@echo  .
	@echo  Archiving: $(LIBNAME) to $@ ...
	$(AR) $(ARFLAGS) $@ $(addprefix $(OBJDIR), $(OBJS))
	@echo  Archiving: $(LIBNAME) Done !!!
	@echo  .

clean:
	@echo  Cleaning: $(LIBNAME) ...
	$(RMDIR) $(OBJDIR)
	$(RM) $(LIBDIR)/$(LIBNAME)

scrub:
	@echo  Scrubing: $(LIBNAME) ...
	-$(RMDIR) obj/
	-$(RMDIR) lib/

$(OBJS): | $(OBJDIR)

$(LIBDIR) $(OBJDIR):
	$(MKDIR) $@

-include $(addprefix $(OBJDIR)/, $(DEPS))
